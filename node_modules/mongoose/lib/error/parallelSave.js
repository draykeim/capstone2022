'use strict';

/*!
 * Module dependencies.
 */

const MongooseError = require('./');

<<<<<<< HEAD
/**
 * ParallelSave Error constructor.
 *
 * @inherits MongooseError
 * @api private
 */

function ParallelSaveError(doc) {
  const msg = 'Can\'t save() the same doc multiple times in parallel. Document: ';
  MongooseError.call(this, msg + doc.id);
  this.name = 'ParallelSaveError';
}

/*!
 * Inherits from MongooseError.
 */

ParallelSaveError.prototype = Object.create(MongooseError.prototype);
ParallelSaveError.prototype.constructor = MongooseError;
=======
class ParallelSaveError extends MongooseError {
  /**
   * ParallelSave Error constructor.
   *
   * @param {Document} doc
   * @api private
   */
  constructor(doc) {
    const msg = 'Can\'t save() the same doc multiple times in parallel. Document: ';
    super(msg + doc._id);
  }
}

Object.defineProperty(ParallelSaveError.prototype, 'name', {
  value: 'ParallelSaveError'
});
>>>>>>> f48a1595ee4da78cea13c4049a9ef48e9e70b5fa

/*!
 * exports
 */

module.exports = ParallelSaveError;
